#################################################
## Generated by an AWS Proton service template
#################################################

name: Deploy using Proton
on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: web-app-sanghun1210-aws-proton-sample-services
  PROTON_SERVICE: web-app

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Assume AWS IAM Role
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-region: us-east-1
        role-to-assume: arn:aws:iam::845480556874:role/web-app-github-action-sanghun1210-aws-proton-sample-services

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./ecs-backend
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Generate new Proton service spec for deployment
      run: |
        aws proton get-service --name ${PROTON_SERVICE} | jq -r .service.spec > spec.yml

        # replace newly built image in yaml and deploy it
        wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && chmod +x /usr/local/bin/yq
        yq ".instances[0].spec.image = \"${{ steps.build.outputs.image }}\"" spec.yml > ${HOME}/service.yml

    - name: Deploy container image to dev using Proton pipeline
      run: |
        aws proton update-service-instance \
          --service-name ${PROTON_SERVICE} \
          --name dev \
          --deployment-type CURRENT_VERSION \
          --spec file://${HOME}/service.yml

        aws proton wait service-instance-deployed \
          --service-name ${PROTON_SERVICE} \
          --name dev

